on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: "0 0 * * *"
jobs:
  checkin: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkin
        env: 
          SOCKBOOM_URL: ${{secrets.SOCKBOOM_URL}}
          SOCKBOOM_USER: ${{secrets.SOCKBOOM_USER}}
          SOCKBOOM_PASSWD: ${{secrets.SOCKBOOM_PASSWD}}
          WEB_HOOK: ${{secrets.WEB_HOOK}}
        run: |
          import requests
          import sys
          import traceback
          form_data = {
            "email": "${{secrets.SOCKBOOM_USER}}",
            "passwd": "${{secrets.SOCKBOOM_PASSWD}}"
          }
          def run(form_data):
              s = requests.Session()
              response = s.post("${{secrets.SOCKBOOM_URL}}/auth/login", data=form_data)
              print(response.text)
              print(response.status_code)
              if response.status_code == 200:
                resp = s.post("${{secrets.SOCKBOOM_URL}}/user/checkin")
                print(resp.json())
                if resp.status_code == 200:
                  if resp.json()['ret'] == 0:
                    msg_data = {
                      "msgtype": "markdown",
                      "markdown": {
                        "content": "<font color=\"comment\">"+ ${{secrets.SOCKBOOM_USER}} + "</font>，签到成功，获得<font color=\"warning\">"+ resp.json()['msg'] + "</font>"
                      }
                    }
                    result = s.post("${{secrets.WEB_HOOK}}", json=msg_data)
                    print(result.text)

                  else:
                    msg_data = {
                      "msgtype": "markdown",
                      "markdown": {
                        "content": "<font color=\"comment\">"+ ${{secrets.SOCKBOOM_USER}} + "</font>，签到失败<font color=\"warning\">"+ resp.json()['msg'] + "</font>"
                      }
                    }
                    s.post("${{secrets.WEB_HOOK}}", json=msg_data)
          def main():
              run(form_data)
              print("run1")
          if __name__ == '__main__':
              try:
                  sys.exit(main())
              except Exception as e:
                  traceback.print_exc()
        shell: python
#